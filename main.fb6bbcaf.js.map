{"version":3,"sources":["../node_modules/fft.js/lib/fft.js","../node_modules/next-pow-2/np2.js","../node_modules/pitchy/lib/index.mjs","js/math.js","js/Player.js","js/PitchChart.js","js/main.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","autocorrelate","input","fft","FFT","paddedInput","size","forEach","val","idx","fill","tmp","createComplexArray","realTransform","completeSpectrum","tmp2","inverseTransform","result","_i","ndsf","rPrimeArray","m","map","rPrime","mPrime","i2","getKeyMaximumIndices","keyIndices","lookingForMaximum","max","maxIndex","push","findPitch","sampleRate","ndsfArray","keyMaximumIndices","K","nMax","Math","apply","resultIndex","find","interpolate","a","b","x","extrapolate","y","RADIUS","Player","ctx","save","strokeStyle","beginPath","arc","PI","stroke","restore","PitchChart","pitchList","z","color","k","fillStyle","fillRect","lineTo","player","pitchChart","analyserNode","audioContext","micStream","pitchElement","clarityElement","minmaxElement","stopButton","startButton","canvas","min","speed","isStarted","width","height","recInterval","velocity","friction","draw","clearRect","filter","setInterval","data","Float32Array","fftSize","getFloatTimeDomainData","pitch","clarity","textContent","String","pitchValue","abs","round","loop","window","requestAnimationFrame","document","addEventListener","getElementById","getContext","onclick","console","log","getAudioTracks","track","stop","e","AudioContext","webkitAudioContext","createAnalyser","navigator","mediaDevices","getUserMedia","audio","then","stream","sourceNode","createMediaStreamSource","connect","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","appendChild","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","d","dep","concat","Function","deps","cached","cache","some","cb"],"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","file":"main.fb6bbcaf.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction FFT(size) {\n  this.size = size | 0;\n  if (this.size <= 1 || (this.size & (this.size - 1)) !== 0)\n    throw new Error('FFT size must be a power of two and bigger than 1');\n\n  this._csize = size << 1;\n\n  // NOTE: Use of `var` is intentional for old V8 versions\n  var table = new Array(this.size * 2);\n  for (var i = 0; i < table.length; i += 2) {\n    const angle = Math.PI * i / this.size;\n    table[i] = Math.cos(angle);\n    table[i + 1] = -Math.sin(angle);\n  }\n  this.table = table;\n\n  // Find size's power of two\n  var power = 0;\n  for (var t = 1; this.size > t; t <<= 1)\n    power++;\n\n  // Calculate initial step's width:\n  //   * If we are full radix-4 - it is 2x smaller to give inital len=8\n  //   * Otherwise it is the same as `power` to give len=4\n  this._width = power % 2 === 0 ? power - 1 : power;\n\n  // Pre-compute bit-reversal patterns\n  this._bitrev = new Array(1 << this._width);\n  for (var j = 0; j < this._bitrev.length; j++) {\n    this._bitrev[j] = 0;\n    for (var shift = 0; shift < this._width; shift += 2) {\n      var revShift = this._width - shift - 2;\n      this._bitrev[j] |= ((j >>> shift) & 3) << revShift;\n    }\n  }\n\n  this._out = null;\n  this._data = null;\n  this._inv = 0;\n}\nmodule.exports = FFT;\n\nFFT.prototype.fromComplexArray = function fromComplexArray(complex, storage) {\n  var res = storage || new Array(complex.length >>> 1);\n  for (var i = 0; i < complex.length; i += 2)\n    res[i >>> 1] = complex[i];\n  return res;\n};\n\nFFT.prototype.createComplexArray = function createComplexArray() {\n  const res = new Array(this._csize);\n  for (var i = 0; i < res.length; i++)\n    res[i] = 0;\n  return res;\n};\n\nFFT.prototype.toComplexArray = function toComplexArray(input, storage) {\n  var res = storage || this.createComplexArray();\n  for (var i = 0; i < res.length; i += 2) {\n    res[i] = input[i >>> 1];\n    res[i + 1] = 0;\n  }\n  return res;\n};\n\nFFT.prototype.completeSpectrum = function completeSpectrum(spectrum) {\n  var size = this._csize;\n  var half = size >>> 1;\n  for (var i = 2; i < half; i += 2) {\n    spectrum[size - i] = spectrum[i];\n    spectrum[size - i + 1] = -spectrum[i + 1];\n  }\n};\n\nFFT.prototype.transform = function transform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._transform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT.prototype.realTransform = function realTransform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._realTransform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT.prototype.inverseTransform = function inverseTransform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 1;\n  this._transform4();\n  for (var i = 0; i < out.length; i++)\n    out[i] /= this.size;\n  this._out = null;\n  this._data = null;\n};\n\n// radix-4 implementation\n//\n// NOTE: Uses of `var` are intentional for older V8 version that do not\n// support both `let compound assignments` and `const phi`\nFFT.prototype._transform4 = function _transform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform2(outOff, off, step);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform4(outOff, off, step);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var quarterLen = len >>> 2;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      // Full case\n      var limit = outOff + quarterLen;\n      for (var i = outOff, k = 0; i < limit; i += 2, k += step) {\n        const A = i;\n        const B = A + quarterLen;\n        const C = B + quarterLen;\n        const D = C + quarterLen;\n\n        // Original values\n        const Ar = out[A];\n        const Ai = out[A + 1];\n        const Br = out[B];\n        const Bi = out[B + 1];\n        const Cr = out[C];\n        const Ci = out[C + 1];\n        const Dr = out[D];\n        const Di = out[D + 1];\n\n        // Middle values\n        const MAr = Ar;\n        const MAi = Ai;\n\n        const tableBr = table[k];\n        const tableBi = inv * table[k + 1];\n        const MBr = Br * tableBr - Bi * tableBi;\n        const MBi = Br * tableBi + Bi * tableBr;\n\n        const tableCr = table[2 * k];\n        const tableCi = inv * table[2 * k + 1];\n        const MCr = Cr * tableCr - Ci * tableCi;\n        const MCi = Cr * tableCi + Ci * tableCr;\n\n        const tableDr = table[3 * k];\n        const tableDi = inv * table[3 * k + 1];\n        const MDr = Dr * tableDr - Di * tableDi;\n        const MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        const T0r = MAr + MCr;\n        const T0i = MAi + MCi;\n        const T1r = MAr - MCr;\n        const T1i = MAi - MCi;\n        const T2r = MBr + MDr;\n        const T2i = MBi + MDi;\n        const T3r = inv * (MBr - MDr);\n        const T3i = inv * (MBi - MDi);\n\n        // Final values\n        const FAr = T0r + T2r;\n        const FAi = T0i + T2i;\n\n        const FCr = T0r - T2r;\n        const FCi = T0i - T2i;\n\n        const FBr = T1r + T3i;\n        const FBi = T1i - T3r;\n\n        const FDr = T1r - T3i;\n        const FDi = T1i + T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n        out[C] = FCr;\n        out[C + 1] = FCi;\n        out[D] = FDr;\n        out[D + 1] = FDi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT.prototype._singleTransform2 = function _singleTransform2(outOff, off,\n                                                             step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const evenI = data[off + 1];\n  const oddR = data[off + step];\n  const oddI = data[off + step + 1];\n\n  const leftR = evenR + oddR;\n  const leftI = evenI + oddI;\n  const rightR = evenR - oddR;\n  const rightI = evenI - oddI;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = leftI;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = rightI;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT.prototype._singleTransform4 = function _singleTransform4(outOff, off,\n                                                             step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Ai = data[off + 1];\n  const Br = data[off + step];\n  const Bi = data[off + step + 1];\n  const Cr = data[off + step2];\n  const Ci = data[off + step2 + 1];\n  const Dr = data[off + step3];\n  const Di = data[off + step3 + 1];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T0i = Ai + Ci;\n  const T1r = Ar - Cr;\n  const T1i = Ai - Ci;\n  const T2r = Br + Dr;\n  const T2i = Bi + Di;\n  const T3r = inv * (Br - Dr);\n  const T3i = inv * (Bi - Di);\n\n  // Final values\n  const FAr = T0r + T2r;\n  const FAi = T0i + T2i;\n\n  const FBr = T1r + T3i;\n  const FBi = T1i - T3r;\n\n  const FCr = T0r - T2r;\n  const FCi = T0i - T2i;\n\n  const FDr = T1r - T3i;\n  const FDi = T1i + T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = FAi;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = FCi;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n\n// Real input radix-4 implementation\nFFT.prototype._realTransform4 = function _realTransform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform2(outOff, off >>> 1, step >>> 1);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform4(outOff, off >>> 1, step >>> 1);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var halfLen = len >>> 1;\n    var quarterLen = halfLen >>> 1;\n    var hquarterLen = quarterLen >>> 1;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      for (var i = 0, k = 0; i <= hquarterLen; i += 2, k += step) {\n        var A = outOff + i;\n        var B = A + quarterLen;\n        var C = B + quarterLen;\n        var D = C + quarterLen;\n\n        // Original values\n        var Ar = out[A];\n        var Ai = out[A + 1];\n        var Br = out[B];\n        var Bi = out[B + 1];\n        var Cr = out[C];\n        var Ci = out[C + 1];\n        var Dr = out[D];\n        var Di = out[D + 1];\n\n        // Middle values\n        var MAr = Ar;\n        var MAi = Ai;\n\n        var tableBr = table[k];\n        var tableBi = inv * table[k + 1];\n        var MBr = Br * tableBr - Bi * tableBi;\n        var MBi = Br * tableBi + Bi * tableBr;\n\n        var tableCr = table[2 * k];\n        var tableCi = inv * table[2 * k + 1];\n        var MCr = Cr * tableCr - Ci * tableCi;\n        var MCi = Cr * tableCi + Ci * tableCr;\n\n        var tableDr = table[3 * k];\n        var tableDi = inv * table[3 * k + 1];\n        var MDr = Dr * tableDr - Di * tableDi;\n        var MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        var T0r = MAr + MCr;\n        var T0i = MAi + MCi;\n        var T1r = MAr - MCr;\n        var T1i = MAi - MCi;\n        var T2r = MBr + MDr;\n        var T2i = MBi + MDi;\n        var T3r = inv * (MBr - MDr);\n        var T3i = inv * (MBi - MDi);\n\n        // Final values\n        var FAr = T0r + T2r;\n        var FAi = T0i + T2i;\n\n        var FBr = T1r + T3i;\n        var FBi = T1i - T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n\n        // Output final middle point\n        if (i === 0) {\n          var FCr = T0r - T2r;\n          var FCi = T0i - T2i;\n          out[C] = FCr;\n          out[C + 1] = FCi;\n          continue;\n        }\n\n        // Do not overwrite ourselves\n        if (i === hquarterLen)\n          continue;\n\n        // In the flipped case:\n        // MAi = -MAi\n        // MBr=-MBi, MBi=-MBr\n        // MCr=-MCr\n        // MDr=MDi, MDi=MDr\n        var ST0r = T1r;\n        var ST0i = -T1i;\n        var ST1r = T0r;\n        var ST1i = -T0i;\n        var ST2r = -inv * T3i;\n        var ST2i = -inv * T3r;\n        var ST3r = -inv * T2i;\n        var ST3i = -inv * T2r;\n\n        var SFAr = ST0r + ST2r;\n        var SFAi = ST0i + ST2i;\n\n        var SFBr = ST1r + ST3i;\n        var SFBi = ST1i - ST3r;\n\n        var SA = outOff + quarterLen - i;\n        var SB = outOff + halfLen - i;\n\n        out[SA] = SFAr;\n        out[SA + 1] = SFAi;\n        out[SB] = SFBr;\n        out[SB + 1] = SFBi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT.prototype._singleRealTransform2 = function _singleRealTransform2(outOff,\n                                                                     off,\n                                                                     step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const oddR = data[off + step];\n\n  const leftR = evenR + oddR;\n  const rightR = evenR - oddR;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = 0;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT.prototype._singleRealTransform4 = function _singleRealTransform4(outOff,\n                                                                     off,\n                                                                     step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Br = data[off + step];\n  const Cr = data[off + step2];\n  const Dr = data[off + step3];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T1r = Ar - Cr;\n  const T2r = Br + Dr;\n  const T3r = inv * (Br - Dr);\n\n  // Final values\n  const FAr = T0r + T2r;\n\n  const FBr = T1r;\n  const FBi = -T3r;\n\n  const FCr = T0r - T2r;\n\n  const FDr = T1r;\n  const FDi = T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = 0;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n","module.exports = function(v) {\n  v += v === 0\n  --v\n  v |= v >>> 1\n  v |= v >>> 2\n  v |= v >>> 4\n  v |= v >>> 8\n  v |= v >>> 16\n  return v + 1\n}\n","import FFT from 'fft.js';\nimport np2 from 'next-pow-2';\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\n/**\n * Return an array containing the autocorrelated input data.\n *\n * @param {number[]} input The input data.\n * @return {number[]} The autocorrelated input data.\n */\n\nfunction autocorrelate(input) {\n  // We need to double the input length to get correct results, and the FFT\n  // algorithm we use requires a size that's a power of 2.\n  var fft = new FFT(np2(2 * input.length)); // Step 0: pad the input array with zeros.\n\n  var paddedInput = new Array(fft.size);\n  input.forEach(function (val, idx) {\n    paddedInput[idx] = val;\n  });\n  paddedInput.fill(0, input.length); // Step 1: get the DFT of the input array.\n\n  var tmp = fft.createComplexArray();\n  fft.realTransform(tmp, paddedInput); // We need to fill in the right half of the array too.\n\n  fft.completeSpectrum(tmp); // Step 2: multiply each entry by its conjugate.\n\n  for (var i = 0; i < tmp.length; i += 2) {\n    tmp[i] = tmp[i] * tmp[i] + tmp[i + 1] * tmp[i + 1];\n    tmp[i + 1] = 0;\n  } // Step 3: perform the inverse transform.\n\n\n  var tmp2 = fft.createComplexArray();\n  fft.inverseTransform(tmp2, tmp); // This last result (the inverse transform) contains the autocorrelation\n  // data, which is completely real.\n\n  var result = new Array(input.length);\n\n  for (var _i = 0; _i < input.length; _i++) {\n    result[_i] = tmp2[2 * _i];\n  }\n\n  return result;\n}\n/**\n * Return an array containing the computed values of the NDSF used in MPM.\n *\n * Specifically, this is equation (9) in the McLeod pitch method paper.\n */\n\nfunction ndsf(input) {\n  // The function r'(tau) is the autocorrelation.\n  var rPrimeArray = autocorrelate(input); // The function m'(tau) (defined in equation (6)) can be computed starting\n  // with m'(0), which is equal to 2r'(0), and then iteratively modified to get\n  // m'(1), m'(2), etc.  For example, to get m'(1), we take m'(0) and subtract\n  // x_0^2 and x_{W-1}^2.  Then, to get m'(2), we take m'(1) and subtract x_1^2\n  // and x_{W-2}^2, and further values are similar.  We use m below as this\n  // value.\n  //\n  // The resulting array values are 2 * r'(tau) / m'(tau).\n\n  var m = 2 * rPrimeArray[0];\n\n  if (m === 0) {\n    // We don't want to trigger any divisions by zero; if the given input data\n    // consists of all zeroes, then so should the output data.\n    var result = new Array(rPrimeArray.length);\n    result.fill(0);\n    return result;\n  } else {\n    return rPrimeArray.map(function (rPrime, i) {\n      var mPrime = m;\n      var i2 = input.length - i - 1;\n      m -= input[i] * input[i] + input[i2] * input[i2];\n      return 2 * rPrime / mPrime;\n    });\n  }\n}\n/**\n * Return an array of all the key maximum positions in the given input array.\n *\n * In McLeod's paper, a key maximum is the highest maximum between a positively\n * sloped zero crossing and a negatively sloped one.\n *\n * TODO: the paper by McLeod proposes doing parabolic interpolation to get more\n * accurate key maxima; right now this implementation doesn't do that, but it\n * could be implemented later.\n */\n\n\nfunction getKeyMaximumIndices(input) {\n  // The indices of the key maxima.\n  var keyIndices = []; // Whether the last zero crossing found was positively sloped; equivalently,\n  // whether we're looking for a key maximum.\n\n  var lookingForMaximum = false; // The largest local maximum found so far.\n\n  var max; // The index of the largest local maximum so far.\n\n  var maxIndex = -1;\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i - 1] < 0 && input[i] > 0) {\n      lookingForMaximum = true;\n      maxIndex = i;\n      max = input[i];\n    } else if (input[i - 1] > 0 && input[i] < 0) {\n      lookingForMaximum = false;\n\n      if (maxIndex !== -1) {\n        keyIndices.push(maxIndex);\n      }\n    } else if (lookingForMaximum && input[i] > max) {\n      max = input[i];\n      maxIndex = i;\n    }\n  }\n\n  return keyIndices;\n}\n/**\n * Return the pitch detected using McLeod Pitch Method (MPM) along with a\n * measure of its clarity.\n *\n * The clarity is a value between 0 and 1 (potentially inclusive) that\n * represents how \"clear\" the pitch was.  A clarity value of 1 indicates that\n * the pitch was very distinct, while lower clarity values indicate less\n * definite pitches.\n *\n * MPM is described in the paper 'A Smarter Way to Find Pitch' by Philip McLeod\n * and Geoff Wyvill\n * (http://miracle.otago.ac.nz/tartini/papers/A_Smarter_Way_to_Find_Pitch.pdf).\n *\n * @param {number[]} input The time-domain input data.\n * @param {number} sampleRate The sample rate at which the input data was\n * collected.\n * @return {[number, number]} The detected pitch, in Hz, followed by the\n * clarity.\n */\n\n\nfunction findPitch(input, sampleRate) {\n  var ndsfArray = ndsf(input);\n  var keyMaximumIndices = getKeyMaximumIndices(ndsfArray);\n\n  if (keyMaximumIndices.length === 0) {\n    // No key maxima means that we either don't have enough data to analyze or\n    // that the data was flawed (such as an input array of zeroes).\n    return [0, 0];\n  } // The constant k mentioned in section 5.  TODO: make this configurable.\n\n\n  var K = 0.9; // The highest key maximum.\n\n  var nMax = Math.max.apply(Math, _toConsumableArray(keyMaximumIndices.map(function (i) {\n    return ndsfArray[i];\n  }))); // Following the paper, we return the pitch corresponding to the first key\n  // maximum higher than K * nMax.\n\n  var resultIndex = keyMaximumIndices.find(function (i) {\n    return ndsfArray[i] >= K * nMax;\n  });\n  return [sampleRate / resultIndex, ndsfArray[resultIndex]];\n}\n\nexport { autocorrelate, findPitch };\n","/**\n * \n * @param {number} a \n * @param {number} b \n * @param {number} x [0;1]\n */\nexport function interpolate(a, b, x) {\n  return (1 - x) * a + x * b\n}\n\n/**\n * \n * @param {number} a \n * @param {number} b \n * @param {number} y [a;b]\n */\nexport function extrapolate(a, b, y) {\n  return (y - a) / (b - a);\n}\n","const RADIUS = 40;\n\nexport class Player {\n  constructor(ctx) {\n    this.ctx = ctx;\n  }\n\n  draw(x, y) {\n    const ctx = this.ctx; \n    ctx.save();\n\n    ctx.strokeStyle = '#000000';\n    ctx.beginPath();\n    ctx.arc(x, y, RADIUS, 0, 2 * Math.PI);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n}\n","\nexport class PitchChart {\n  constructor(ctx,) {\n    this.ctx = ctx;\n  }\n\n  draw(pitchList) {\n    const ctx = this.ctx; \n    ctx.save();\n    ctx.beginPath();\n    pitchList.forEach(({x, y , z, color}) => {\n      const k = z ? z : 0;\n      const size = 10 * k;\n      ctx.fillStyle = `rgb(255, ${color}, ${255 - color})`;\n      ctx.strokeStyle = `rgb(255, ${color}, ${255 - color})`;\n      ctx.fillRect(x, y, size, size);\n      ctx.lineTo(x, y);\n    });\n\n    ctx.stroke();\n    ctx.restore();\n  }\n}\n","import { findPitch } from 'pitchy';\nimport { extrapolate } from './math';\nimport { Player } from './Player';\nimport { PitchChart } from './PitchChart';\n\nlet player;\nlet pitchChart;\nlet analyserNode;\nlet audioContext;\nlet micStream;\nlet pitchElement;\nlet clarityElement;\nlet minmaxElement;\nlet stopButton;\nlet startButton;\nlet canvas;\nlet ctx;\nlet pitchList = [];\nlet min = 180;\nlet max = 250;\nlet speed = 5;\nlet isStarted = false;\nlet width = 600;\nlet height = 600;\nlet recInterval = 100;\nlet velocity = 0;\nlet friction = 10;\nlet y = 300;\n\nfunction draw() {\n  ctx.clearRect(0, 0, width, height);\n\n  if (velocity !== 0) {\n    velocity = velocity < 0 ? velocity + friction : velocity - friction;\n  }\n\n  y = y + velocity * 0.05;\n  if (y > height) {\n    y = height;\n  }\n  if (y < 0) {\n    y = 0;\n  }\n\n  if(isStarted){\n    pitchList = pitchList\n    .map(({x, y, z, color}) => ({ x: x - speed, y, z, color }))\n    .filter(({ x }) => x > -20);\n  }\n\n  pitchChart.draw(pitchList);\n  player.draw(50, y);\n\n}\n\nsetInterval(() => {\n  if (isStarted) {\n    let data = new Float32Array(analyserNode.fftSize);\n    analyserNode.getFloatTimeDomainData(data);\n    let [pitch, clarity] = findPitch(data, audioContext.sampleRate);\n\n    pitchElement.textContent = String(pitch);\n    clarityElement.textContent = String(clarity);\n\n    const pitchValue = Math.abs(extrapolate(min, max, pitch));\n\n    if(isStarted && pitch > 100 && pitch < 500 && clarity > 0.95) {\n      velocity = (min + max) / 2 - pitchValue * height;\n      pitchList.push({\n        x: 600,\n        y: height - pitchValue * height,\n        z: clarity,\n        color: pitchValue * 255\n      });\n      if (pitch < min) min = pitch;\n      if (pitch > max) max = pitch;\n\n      minmaxElement.textContent = `pitch: ${Math.round(min)} - ${Math.round(max)}, avg: ${Math.round(min + max) / 2}`;\n    }\n  }\n}, recInterval);\n\nfunction loop() {\n  draw();\n  window.requestAnimationFrame(loop);\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  pitchElement = document.getElementById('pitch');\n  clarityElement = document.getElementById('clarity');\n  stopButton = document.getElementById('stop');\n  startButton = document.getElementById('start');\n  minmaxElement = document.getElementById('minmax');\n  canvas = document.getElementById('canvas');\n  ctx = canvas.getContext('2d');\n  player = new Player(ctx, 6);\n  pitchChart = new PitchChart(ctx, pitchList);\n\n  stopButton.onclick = () => {\n    console.log('stop');\n    isStarted = false;\n    micStream.getAudioTracks().forEach(track => {\n      track.stop();\n    });\n  }\n\n  startButton.onclick = e => {\n    audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    analyserNode = audioContext.createAnalyser();\n    isStarted = true;\n\n    navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n      console.log('start');\n      minmaxElement.textContent = `pitch: ${min} - ${max}`;\n      micStream = stream;\n      let sourceNode = audioContext.createMediaStreamSource(stream);\n      sourceNode.connect(analyserNode);\n      loop();\n    });\n  }\n});","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}